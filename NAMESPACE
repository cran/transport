# transport NAMESPACE file
#

# Import form standard packages (except for base)
#
importFrom("grDevices", "grey", "heat.colors")
importFrom("graphics", "arrows", "image", "matplot", "par", "plot",
             "points", "segments")
importFrom("stats", "aggregate", "dist", "optim", "runif")


# Entry points into compiled code
useDynLib(transport,
"primaldual","auction","auctionbf","revsimplex","shortsimplex",
"decompose_c","aha_phi","aha_dphi","aha_init","aha_free","aha_wasserstein","aha_compute_transport","aha_get_transport",
"compute_power_diagram","get_power_diagram")
#

# Export all names unless they start with a period
# exportPattern("^[^\\.]")
# exports many internals and NativeSymbolInfos -> undesirable

# The following list was generated by manual deletion of native symbols
# from cat(getNamespaceExports("transport"), sep=",\n"). 
# Internal functions were commented out
export(aha,
all.equal.pgrid,
all.equal.pp,
compatible,
compatible.pgrid,
compatible.pp,
dedegenerate,
# findblocks,
# fudge,
# image2,
northwestcorner,
pgrid,
plot.pgrid,
plot.power_diagram,
plot.pp,
power_diagram,
pp,
# refinesol,
russell,
transport,
transport_apply,
transport_error,
transport.default,
transport.pgrid,
transport.pp,
trcontrol,
wasserstein)
# triangulate)



# Registering S3 methods
# Not sure if this is necessary for my own generic functions
S3method("plot", "pgrid")
S3method("plot", "power_diagram")
S3method("plot", "pp")
S3method("print", "pgrid")
S3method("print", "pp")
S3method("summary", "pgrid")
S3method("summary", "pp")
S3method("all.equal", "pgrid")
S3method("all.equal", "pp")
S3method("compatible", "pgrid")
S3method("compatible", "pp")
S3method("transport", "pgrid")
S3method("transport", "pp")
S3method("transport", "default")




